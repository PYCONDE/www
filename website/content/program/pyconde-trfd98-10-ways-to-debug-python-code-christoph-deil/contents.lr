_model: session 
---
code: TRFD98
---
title: 10 ways to debug Python code
---
description: Learn 10  ways to debug your Python code and many tips and tricks for effective debugging in 30 minutes.
---
short_description: Learn 10  ways to debug your Python code and many tips and tricks for effective debugging in 30 minutes.
---
twitter_image: /static/media/twitter/TRFD98.jpg
---
speakers: Christoph Deil
---
submission_type: Talk
---
domains: Code-Review, IDEs/ Jupyter
---
biography: #### Christoph Deil

Affiliation: MPIK



Christoph is a researcher in gamma-ray astronomy working at the Max-Planck-Institute for Nuclear Physics in Heidelberg, Germany. He is a lead developer for [Gammapy](https://gammapy.org)  and has contributed to several scientific Python open source projects on Github, and recently he joined as co-organiser of the PyData Heidelberg meetups.

visit the speaker at: [Twitter](https://twitter.com/ChristophDeil) • [Github](https://github.com/cdeil) • [Homepage](https://christophdeil.com/)
---
affiliation: MPIK
---
track: PyConDE
---
python_skill: Python Skill Level basic
---
domain_expertise: Domain Expertise none
---
room: Saal 10
---
start_time: 10:50
---
day: thursday
---
meta_title: 10 ways to debug Python code Christoph Deil PyConDE & PyDataBerlin 2019 conference 
---
meta_twitter_title: 10 ways to debug Python code @ChristophDeil #PyConDE #PyDataBerlin #PyData
---
categories: pyconde, python-skill-level-basic, domain-expertise-none, talk, code-review, ides-jupyter, thursday, thursday-1050
---
slugified_slot_links: thursday, thursday-1050
---
video_link: https://www.youtube.com/embed/cokP4XAhcwo
---
youtube_id: cokP4XAhcwo
---
body: Are your debugging skills limited to "print", or do you sometimes think there must be a better way to figure out what's going on? I will show 10 ways to debug Python code, and share tips and tricks for effective debugging.

This talk is at the beginner level, but it is fast-paced, with the goal to give you an overview of the many options to debug Python code, and to let you find the "right tool for the job" when you encounter a problem. We will start with a quick introduction how Python executes code, focusing on stack frames and tracebacks. Then we will give an overview of different tools and techniques to debug Python if you get an error or unexpected output, ranging from pdb in the terminal to ipdb in Jupyter to the visual debugger in PyCharm and VS Code.

