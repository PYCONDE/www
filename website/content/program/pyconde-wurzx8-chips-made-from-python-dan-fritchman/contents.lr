_model: session 
---
code: WURZX8
---
title: Chips Made From Python
---
description: Chips Made From Python - Hardware description in Python (and friends), and their role in modern silicon
---
short_description: Chips Made From Python - Hardware description in Python (and friends), and their role in modern silicon
---
twitter_image: /static/media/twitter/WURZX8.jpg
---
speakers: Dan Fritchman
---
submission_type: Talk
---
domains: Microcontrollers, Parallel Programming, Science, Makers
---
biography: #### Dan Fritchman

Affiliation: HW21



Dan Fritchman is the founder of San Francisco, Ca based HW21, an early-stage company with a mission to Enable Hardware for the 21st Century.  Prior to founding HW21, Mr Fritchman spent the period from 2009-19 at Apple Inc, Cupertino, Ca, in a series of roles in silicon and hardware engineering.  Mr Fritchman will join the University of California, Berkeley, USA in January 2020 as a candidate for the PhD in Electrical Engineering and Computer Science.  He holds a BS from Duke University, Durham, NC, USA, and an MS from Santa Clara University, Santa Clara, Ca, USA.

visit the speaker at: [Twitter](https://twitter.com/dan_fritchman) • [Github](https://github.com/@dan-fritchman) • [Homepage](http://hw21.io)
---
affiliation: HW21
---
track: PyConDE
---
python_skill: Python Skill Level guru
---
domain_expertise: Domain Expertise guru
---
room: Saal 5
---
start_time: 16:05
---
day: thursday
---
meta_title: Chips Made From Python Dan Fritchman PyConDE & PyDataBerlin 2019 conference 
---
meta_twitter_title: Chips Made From Python @dan_fritchman #PyConDE #PyDataBerlin #PyData
---
categories: pyconde, python-skill-level-guru, domain-expertise-guru, talk, microcontrollers, parallel-programming, science, makers, thursday, thursday-1605
---
slugified_slot_links: thursday, thursday-1605
---
video_link: https://www.youtube.com/embed/o3WkrKdGrRc
---
youtube_id: o3WkrKdGrRc
---
body: Chip design does not often tend to be thought of as *programming*, although a complex system-on-chip (SoC) is generally crafted through thousands or millions of lines of code. 

For decades chip design has primarily taken place in C-derived, domain-specific *hardware description languages*, such as Verilog and VHDL.  A recent set of *hardware description libraries*, several based in Python, aim to instead move the chip-design process into modern programming languages. 

These developments ride alongside a complementary rise in prominence of the open-source RISC-V instruction set, enabling Python implementations of fully open-source CPUs and SOCs.  

This talk will introduce the primary libraries in this space, chips being built with them, and likely future directions for Python's role in silicon design.

