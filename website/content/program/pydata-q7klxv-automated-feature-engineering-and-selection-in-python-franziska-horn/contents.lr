_model: session 
---
code: Q7KLXV
---
title: Automated Feature Engineering and Selection in Python
---
description: Automated feature engineering and selection in Python with the autofeat library.
---
short_description: Automated feature engineering and selection in Python with the autofeat library.
---
twitter_image: /static/media/twitter/Q7KLXV.jpg
---
speakers: Franziska Horn
---
submission_type: Talk
---
domains: Data Science, Machine Learning, Science, Data Engineering, Statistics
---
biography: #### Franziska Horn

Affiliation: TU Berlin



Franzi has several years of experience tackling machine learning problems in both research and application contexts. She has specialised in natural language processing, representation learning, and data visualisation. She holds a BSc in cognitive science, a MSc in computer science, and is currently completing her PhD in machine learning, while also working as a freelance data science consultant.

visit the speaker at: [Github](https://github.com/cod3licious) â€¢ [Homepage](https://cod3licious.github.io/)
---
affiliation: TU Berlin
---
track: PyData
---
python_skill: Python Skill Level basic
---
domain_expertise: Domain Expertise some
---
room: Saal 5
---
start_time: 14:00
---
day: wednesday
---
meta_title: Automated Feature Engineering and Selection in Python Franziska Horn PyConDE & PyDataBerlin 2019 conference 
---
meta_twitter_title: Automated Feature Engineering and Selection in Python @ #PyConDE #PyDataBerlin #PyData
---
categories: pydata, python-skill-level-basic, domain-expertise-some, talk, data-science, machine-learning, science, data-engineering, statistics, wednesday, wednesday-1400
---
slugified_slot_links: wednesday, wednesday-1400
---
video_link: https://www.youtube.com/embed/4-4pKPv9lJ4
---
youtube_id: 4-4pKPv9lJ4
---
body: While there already exist several libraries for automatically selecting the best ML model and its hyperparameters for a prediction task, feature engineering is still mostly a manual task. I will present different options for automating the feature engineering and selection process in Python with a focus on the open source [`autofeat` library](https://github.com/cod3licious/autofeat), which provides a `scikit-learn` style linear regression model with automated feature engineering and selection capabilities.

Complex non-linear machine learning models such as neural networks are in practice often difficult to train and even harder to explain to non-statisticians, who require transparent analysis results as a basis for important business decisions. While linear models are efficient and intuitive, they generally provide lower prediction accuracies. The `autofeat` library provides a multi-step feature engineering and selection process, where first a large pool of non-linear features is generated, from which then a small and robust set of meaningful features is selected, which improve the prediction accuracy of a linear model while retaining its interpretability.

