_model: session 
---
code: PC38WB
---
title: Managing the end-to-end machine learning lifecycle with MLFlow
---
description: How to manage the end-to-end machine learning lifecycle with MLflow.
---
short_description: How to manage the end-to-end machine learning lifecycle with MLflow.
---
twitter_image: /static/media/twitter/PC38WB.jpg
---
speakers: Tobias Sterbak
---
submission_type: Tutorial
---
domains: Data Science, Infrastructure, Machine Learning, Data Engineering
---
biography: #### Tobias Sterbak

Affiliation: Freelancer @ depends-on-the-defintion



Data Scientist | Deep Learning Practitioner | Mathematician

You can find me on Twitter @tobias_sterbak and blogging on https://www.depends-on-the-definition.com

visit the speaker at: [Twitter](https://twitter.com/tobias_sterbak) • [Github](https://github.com/tsterbak) • [Homepage](http://www.depends-on-the-definition.com)
---
affiliation: Freelancer @ depends-on-the-defintion
---
track: PyData
---
python_skill: Python Skill Level basic
---
domain_expertise: Domain Expertise some
---
room: Saal 7
---
start_time: 10:00
---
day: friday
---
meta_title: Managing the end-to-end machine learning lifecycle with MLFlow Tobias Sterbak PyConDE & PyDataBerlin 2019 conference 
---
meta_twitter_title: Managing the end-to-end machine learning lifecycle with MLFlow @tobias_sterbak #PyConDE #PyDataBerlin #PyData
---
categories: pydata, python-skill-level-basic, domain-expertise-some, tutorial, data-science, infrastructure, machine-learning, data-engineering, friday, friday-1000
---
slugified_slot_links: friday, friday-1000
---
video_link: https://www.youtube.com/embed/6z0_n8kxh-g
---
youtube_id: 6z0_n8kxh-g
---
body: __Please make sure to check out the installation instructions and data before participating.__ There might be no sufficient internet connection at the venue.

__Instructions and data__ can be found here: __https://github.com/tsterbak/pydataberlin-2019__
 
Machine learning requires experimenting with a wide range of datasets, data preparation steps, and algorithms to build a model that maximizes some target metric. Once you have built a model, you also need to deploy it to a production system, monitor its performance, and continuously retrain it on new data and compare with alternative models. A possible solution to managing this complexity is offered by **MLFlow**. MLflow is an open source platform for managing the end-to-end machine learning lifecycle. 

This tutorial showcases how you can use MLflow end-to-end to:
* Train models and *keep track* of experiments with **MLflow Tracking**
* Package the code that trains the model in a *reusable and reproducible* model format with **MLFlow Projects**
* *Deploy* the model into a HTTP server that will enable you to score predictions with **MLFlow Models**

